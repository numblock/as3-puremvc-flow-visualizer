package nl.numblock.flowcharter.view {	import fl.containers.ScrollPane;	import nl.numblock.flowcharter.constants.Notifications;	import org.puremvc.as3.multicore.interfaces.INotification;	import org.puremvc.as3.multicore.patterns.mediator.Mediator;	import flash.display.MovieClip;	/**	 * Short description for file.	 *	 * @package    nl.numblock.flowcharter.view	 * @author     numblock / 2010	 * @version    SVN: $Id$	*/	public class ScrollPaneMediator extends Mediator	{		public static const NAME 	: 	String 	= 	"ScrollPaneMediator";		public function ScrollPaneMediator(viewComponent : Object = null)		{			super(ScrollPaneMediator.NAME, viewComponent);		}				override public function onRegister() : void		{			var newSkinClip:MovieClip = new MovieClip();			scrollPane.setStyle( "skin", newSkinClip ); //ScrollPane_upSkin			scrollPane.setStyle( "upSkin", newSkinClip ); 		}		override public function listNotificationInterests() : Array		{			return	[						Notifications.UPDATE_SCROLL_PANE,						Notifications.STAGE_RESIZE					];		}				override public function handleNotification(note : INotification) : void		{			switch( note.getName() )			{				case Notifications.UPDATE_SCROLL_PANE 	:					scrollPane.update();				break;				case Notifications.STAGE_RESIZE			:					scrollPane.width	=	scrollPane.stage.stageWidth;					scrollPane.height	=	scrollPane.stage.stageHeight;				break;			}		}				public function get scrollPane() : ScrollPane		{			return viewComponent as ScrollPane;		}	}}