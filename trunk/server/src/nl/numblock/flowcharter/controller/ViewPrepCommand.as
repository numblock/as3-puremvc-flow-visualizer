package nl.numblock.flowcharter.controller {	import nl.numblock.flowcharter.view.components.ToolBar;
	import fl.containers.ScrollPane;	import fl.controls.ScrollPolicy;	import nl.numblock.flowcharter.view.BackgroundMediator;	import nl.numblock.flowcharter.view.ScrollPaneMediator;	import nl.numblock.flowcharter.view.StageMediator;	import nl.numblock.flowcharter.view.ToolBarMediator;	import nl.numblock.flowcharter.view.UMLContainerMediator;	import nl.numblock.flowcharter.view.components.Background;	import nl.numblock.flowcharter.view.components.UMLContainer;	import org.puremvc.as3.multicore.interfaces.INotification;	import org.puremvc.as3.multicore.patterns.command.SimpleCommand;	import flash.display.Stage;	/**	 * Short description for file.	 *	 * @package    nl.numblock.flowcharter.controller	 * @author     numblock / 2010	 * @version    SVN: $Id$	*/	public class ViewPrepCommand extends SimpleCommand	{		override public function execute(note: INotification) : void		{						var stage		:	Stage		=	Main(note.getBody()).stage;			facade.registerMediator(new StageMediator( stage ));						var bg			:	Background	=	new Background();			stage.addChild(bg);			facade.registerMediator(new BackgroundMediator( bg ));						var toolBar		:	ToolBar		=	new ToolBar();			facade.registerMediator(new ToolBarMediator(toolBar));						var scrollPane	:	ScrollPane	=	new ScrollPane();			scrollPane.width				=	stage.stageWidth;			scrollPane.height				=	stage.stageHeight - toolBar.height;			scrollPane.y					=	toolBar.height;			scrollPane.scrollDrag			=	true;			scrollPane.horizontalScrollPolicy	=	ScrollPolicy.AUTO;			scrollPane.verticalScrollPolicy		=	ScrollPolicy.AUTO;			stage.addChild(scrollPane);			facade.registerMediator(new ScrollPaneMediator( scrollPane ));						var umlContainer	:	UMLContainer	=	new UMLContainer();			stage.addChild(umlContainer);			scrollPane.source						=	umlContainer;			facade.registerMediator(new UMLContainerMediator( umlContainer ));						stage.addChild(toolBar);		}	}}